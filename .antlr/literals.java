// Generated from /home/ggx/home/antlr_works/install/literals.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class literals extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DecIntConst=1, OctIntConst=2, HexIntConst=3, DecFloatConst=4, HexFloatConst=5, 
		StringConst=6;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"HexPrefix", "OctPrefix", "NonzeroDigit", "Digit", "HexDigit", "OctDegit", 
			"DecIntConst", "OctIntConst", "HexIntConst", "Dot", "Sign", "Exponent", 
			"HexExponent", "DecFloatFrac", "HexFloatFrac", "DecFloatExp", "BinFloatExp", 
			"DecFloatConst", "HexFloatConst", "Escaped", "StringConst"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "DecIntConst", "OctIntConst", "HexIntConst", "DecFloatConst", "HexFloatConst", 
			"StringConst"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public literals(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "literals.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0006\u00bb\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0003\u00000\b\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0005\u0006>\b\u0006\n\u0006\f\u0006A\t\u0006\u0001\u0007\u0001\u0007"+
		"\u0005\u0007E\b\u0007\n\u0007\f\u0007H\t\u0007\u0001\b\u0001\b\u0004\b"+
		"L\b\b\u000b\b\f\bM\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\f\u0001\f\u0001\r\u0005\rY\b\r\n\r\f\r\\\t\r\u0001\r\u0001\r\u0004"+
		"\r`\b\r\u000b\r\f\ra\u0001\r\u0004\re\b\r\u000b\r\f\rf\u0001\r\u0001\r"+
		"\u0003\rk\b\r\u0001\u000e\u0005\u000en\b\u000e\n\u000e\f\u000eq\t\u000e"+
		"\u0001\u000e\u0001\u000e\u0004\u000eu\b\u000e\u000b\u000e\f\u000ev\u0001"+
		"\u000e\u0004\u000ez\b\u000e\u000b\u000e\f\u000e{\u0001\u000e\u0001\u000e"+
		"\u0003\u000e\u0080\b\u000e\u0001\u000f\u0001\u000f\u0003\u000f\u0084\b"+
		"\u000f\u0001\u000f\u0004\u000f\u0087\b\u000f\u000b\u000f\f\u000f\u0088"+
		"\u0001\u0010\u0001\u0010\u0003\u0010\u008d\b\u0010\u0001\u0010\u0004\u0010"+
		"\u0090\b\u0010\u000b\u0010\f\u0010\u0091\u0001\u0011\u0001\u0011\u0003"+
		"\u0011\u0096\b\u0011\u0001\u0011\u0004\u0011\u0099\b\u0011\u000b\u0011"+
		"\f\u0011\u009a\u0001\u0011\u0001\u0011\u0003\u0011\u009f\b\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0004"+
		"\u0012\u00a7\b\u0012\u000b\u0012\f\u0012\u00a8\u0001\u0012\u0001\u0012"+
		"\u0003\u0012\u00ad\b\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0005\u0014\u00b5\b\u0014\n\u0014\f\u0014\u00b8"+
		"\t\u0014\u0001\u0014\u0001\u0014\u0000\u0000\u0015\u0001\u0000\u0003\u0000"+
		"\u0005\u0000\u0007\u0000\t\u0000\u000b\u0000\r\u0001\u000f\u0002\u0011"+
		"\u0003\u0013\u0000\u0015\u0000\u0017\u0000\u0019\u0000\u001b\u0000\u001d"+
		"\u0000\u001f\u0000!\u0000#\u0004%\u0005\'\u0000)\u0006\u0001\u0000\t\u0001"+
		"\u000019\u0001\u000009\u0003\u000009AFaf\u0001\u000007\u0002\u0000++-"+
		"-\u0002\u0000EEee\u0002\u0000PPpp\n\u0000\"\"\'\'??\\\\abffnnrrttvv\u0005"+
		"\u0000\n\n\r\r\"\"\'\'\\\\\u00c2\u0000\r\u0001\u0000\u0000\u0000\u0000"+
		"\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0001/\u0001\u0000\u0000\u0000\u00031\u0001\u0000\u0000"+
		"\u0000\u00053\u0001\u0000\u0000\u0000\u00075\u0001\u0000\u0000\u0000\t"+
		"7\u0001\u0000\u0000\u0000\u000b9\u0001\u0000\u0000\u0000\r;\u0001\u0000"+
		"\u0000\u0000\u000fB\u0001\u0000\u0000\u0000\u0011I\u0001\u0000\u0000\u0000"+
		"\u0013O\u0001\u0000\u0000\u0000\u0015Q\u0001\u0000\u0000\u0000\u0017S"+
		"\u0001\u0000\u0000\u0000\u0019U\u0001\u0000\u0000\u0000\u001bj\u0001\u0000"+
		"\u0000\u0000\u001d\u007f\u0001\u0000\u0000\u0000\u001f\u0081\u0001\u0000"+
		"\u0000\u0000!\u008a\u0001\u0000\u0000\u0000#\u009e\u0001\u0000\u0000\u0000"+
		"%\u00ac\u0001\u0000\u0000\u0000\'\u00ae\u0001\u0000\u0000\u0000)\u00b1"+
		"\u0001\u0000\u0000\u0000+,\u00050\u0000\u0000,0\u0005x\u0000\u0000-.\u0005"+
		"0\u0000\u0000.0\u0005X\u0000\u0000/+\u0001\u0000\u0000\u0000/-\u0001\u0000"+
		"\u0000\u00000\u0002\u0001\u0000\u0000\u000012\u00050\u0000\u00002\u0004"+
		"\u0001\u0000\u0000\u000034\u0007\u0000\u0000\u00004\u0006\u0001\u0000"+
		"\u0000\u000056\u0007\u0001\u0000\u00006\b\u0001\u0000\u0000\u000078\u0007"+
		"\u0002\u0000\u00008\n\u0001\u0000\u0000\u00009:\u0007\u0003\u0000\u0000"+
		":\f\u0001\u0000\u0000\u0000;?\u0003\u0005\u0002\u0000<>\u0003\u0007\u0003"+
		"\u0000=<\u0001\u0000\u0000\u0000>A\u0001\u0000\u0000\u0000?=\u0001\u0000"+
		"\u0000\u0000?@\u0001\u0000\u0000\u0000@\u000e\u0001\u0000\u0000\u0000"+
		"A?\u0001\u0000\u0000\u0000BF\u0003\u0003\u0001\u0000CE\u0003\u000b\u0005"+
		"\u0000DC\u0001\u0000\u0000\u0000EH\u0001\u0000\u0000\u0000FD\u0001\u0000"+
		"\u0000\u0000FG\u0001\u0000\u0000\u0000G\u0010\u0001\u0000\u0000\u0000"+
		"HF\u0001\u0000\u0000\u0000IK\u0003\u0001\u0000\u0000JL\u0003\t\u0004\u0000"+
		"KJ\u0001\u0000\u0000\u0000LM\u0001\u0000\u0000\u0000MK\u0001\u0000\u0000"+
		"\u0000MN\u0001\u0000\u0000\u0000N\u0012\u0001\u0000\u0000\u0000OP\u0005"+
		".\u0000\u0000P\u0014\u0001\u0000\u0000\u0000QR\u0007\u0004\u0000\u0000"+
		"R\u0016\u0001\u0000\u0000\u0000ST\u0007\u0005\u0000\u0000T\u0018\u0001"+
		"\u0000\u0000\u0000UV\u0007\u0006\u0000\u0000V\u001a\u0001\u0000\u0000"+
		"\u0000WY\u0003\u0007\u0003\u0000XW\u0001\u0000\u0000\u0000Y\\\u0001\u0000"+
		"\u0000\u0000ZX\u0001\u0000\u0000\u0000Z[\u0001\u0000\u0000\u0000[]\u0001"+
		"\u0000\u0000\u0000\\Z\u0001\u0000\u0000\u0000]_\u0003\u0013\t\u0000^`"+
		"\u0003\u0007\u0003\u0000_^\u0001\u0000\u0000\u0000`a\u0001\u0000\u0000"+
		"\u0000a_\u0001\u0000\u0000\u0000ab\u0001\u0000\u0000\u0000bk\u0001\u0000"+
		"\u0000\u0000ce\u0003\u0007\u0003\u0000dc\u0001\u0000\u0000\u0000ef\u0001"+
		"\u0000\u0000\u0000fd\u0001\u0000\u0000\u0000fg\u0001\u0000\u0000\u0000"+
		"gh\u0001\u0000\u0000\u0000hi\u0003\u0013\t\u0000ik\u0001\u0000\u0000\u0000"+
		"jZ\u0001\u0000\u0000\u0000jd\u0001\u0000\u0000\u0000k\u001c\u0001\u0000"+
		"\u0000\u0000ln\u0003\t\u0004\u0000ml\u0001\u0000\u0000\u0000nq\u0001\u0000"+
		"\u0000\u0000om\u0001\u0000\u0000\u0000op\u0001\u0000\u0000\u0000pr\u0001"+
		"\u0000\u0000\u0000qo\u0001\u0000\u0000\u0000rt\u0003\u0013\t\u0000su\u0003"+
		"\t\u0004\u0000ts\u0001\u0000\u0000\u0000uv\u0001\u0000\u0000\u0000vt\u0001"+
		"\u0000\u0000\u0000vw\u0001\u0000\u0000\u0000w\u0080\u0001\u0000\u0000"+
		"\u0000xz\u0003\t\u0004\u0000yx\u0001\u0000\u0000\u0000z{\u0001\u0000\u0000"+
		"\u0000{y\u0001\u0000\u0000\u0000{|\u0001\u0000\u0000\u0000|}\u0001\u0000"+
		"\u0000\u0000}~\u0003\u0013\t\u0000~\u0080\u0001\u0000\u0000\u0000\u007f"+
		"o\u0001\u0000\u0000\u0000\u007fy\u0001\u0000\u0000\u0000\u0080\u001e\u0001"+
		"\u0000\u0000\u0000\u0081\u0083\u0003\u0017\u000b\u0000\u0082\u0084\u0003"+
		"\u0015\n\u0000\u0083\u0082\u0001\u0000\u0000\u0000\u0083\u0084\u0001\u0000"+
		"\u0000\u0000\u0084\u0086\u0001\u0000\u0000\u0000\u0085\u0087\u0003\u0007"+
		"\u0003\u0000\u0086\u0085\u0001\u0000\u0000\u0000\u0087\u0088\u0001\u0000"+
		"\u0000\u0000\u0088\u0086\u0001\u0000\u0000\u0000\u0088\u0089\u0001\u0000"+
		"\u0000\u0000\u0089 \u0001\u0000\u0000\u0000\u008a\u008c\u0003\u0019\f"+
		"\u0000\u008b\u008d\u0003\u0015\n\u0000\u008c\u008b\u0001\u0000\u0000\u0000"+
		"\u008c\u008d\u0001\u0000\u0000\u0000\u008d\u008f\u0001\u0000\u0000\u0000"+
		"\u008e\u0090\u0003\u0007\u0003\u0000\u008f\u008e\u0001\u0000\u0000\u0000"+
		"\u0090\u0091\u0001\u0000\u0000\u0000\u0091\u008f\u0001\u0000\u0000\u0000"+
		"\u0091\u0092\u0001\u0000\u0000\u0000\u0092\"\u0001\u0000\u0000\u0000\u0093"+
		"\u0095\u0003\u001b\r\u0000\u0094\u0096\u0003\u001f\u000f\u0000\u0095\u0094"+
		"\u0001\u0000\u0000\u0000\u0095\u0096\u0001\u0000\u0000\u0000\u0096\u009f"+
		"\u0001\u0000\u0000\u0000\u0097\u0099\u0003\u0007\u0003\u0000\u0098\u0097"+
		"\u0001\u0000\u0000\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u009a\u0098"+
		"\u0001\u0000\u0000\u0000\u009a\u009b\u0001\u0000\u0000\u0000\u009b\u009c"+
		"\u0001\u0000\u0000\u0000\u009c\u009d\u0003\u001f\u000f\u0000\u009d\u009f"+
		"\u0001\u0000\u0000\u0000\u009e\u0093\u0001\u0000\u0000\u0000\u009e\u0098"+
		"\u0001\u0000\u0000\u0000\u009f$\u0001\u0000\u0000\u0000\u00a0\u00a1\u0003"+
		"\u0001\u0000\u0000\u00a1\u00a2\u0003\u001d\u000e\u0000\u00a2\u00a3\u0003"+
		"!\u0010\u0000\u00a3\u00ad\u0001\u0000\u0000\u0000\u00a4\u00a6\u0003\u0001"+
		"\u0000\u0000\u00a5\u00a7\u0003\t\u0004\u0000\u00a6\u00a5\u0001\u0000\u0000"+
		"\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000"+
		"\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00aa\u0001\u0000\u0000"+
		"\u0000\u00aa\u00ab\u0003!\u0010\u0000\u00ab\u00ad\u0001\u0000\u0000\u0000"+
		"\u00ac\u00a0\u0001\u0000\u0000\u0000\u00ac\u00a4\u0001\u0000\u0000\u0000"+
		"\u00ad&\u0001\u0000\u0000\u0000\u00ae\u00af\u0005\\\u0000\u0000\u00af"+
		"\u00b0\u0007\u0007\u0000\u0000\u00b0(\u0001\u0000\u0000\u0000\u00b1\u00b6"+
		"\u0005\"\u0000\u0000\u00b2\u00b5\b\b\u0000\u0000\u00b3\u00b5\u0003\'\u0013"+
		"\u0000\u00b4\u00b2\u0001\u0000\u0000\u0000\u00b4\u00b3\u0001\u0000\u0000"+
		"\u0000\u00b5\u00b8\u0001\u0000\u0000\u0000\u00b6\u00b4\u0001\u0000\u0000"+
		"\u0000\u00b6\u00b7\u0001\u0000\u0000\u0000\u00b7\u00b9\u0001\u0000\u0000"+
		"\u0000\u00b8\u00b6\u0001\u0000\u0000\u0000\u00b9\u00ba\u0005\"\u0000\u0000"+
		"\u00ba*\u0001\u0000\u0000\u0000\u0018\u0000/?FMZafjov{\u007f\u0083\u0088"+
		"\u008c\u0091\u0095\u009a\u009e\u00a8\u00ac\u00b4\u00b6\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}